
name: rootfs

on:
  workflow_dispatch:


jobs:
  kernel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: sudo apt update && sudo apt install build-essential gcc-aarch64-linux-gnu bc flex bison 7zip kmod bash cpio binutils tar git wget dpkg libssl-dev

      - name: Build kernel
        run: sudo sh veux-kernel_build.sh ${{ matrix.version }}

      - name: Build boot.img
        run: sudo cat ./boot-by-partition-build/boot32/img_info && sudo mkdir ./boot-by-partition-build/boot32/ramdisk && sudo chmod +x ./boot-by-partition-build/* && ./boot-by-partition-build/mkboot ./boot-by-partition-build/boot32 ./boot-by-partition-build/boot.img
 
      - name: Upload deb packages
        uses: actions/upload-artifact@v4.0.0
        with:
          name: xiaomi-veux-debs
          path: ${{ github.workspace }}/*.deb

      - name: Upload boot.img
        uses: actions/upload-artifact@v4.0.0
        with:
          name: xiaomi-veux.img
          path: ${{ github.workspace }}/boot-by-partition-build/*.img
          
  rootfs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: kernel
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: xiaomi-veux-debs*
      - uses: actions/download-artifact@v4
        with:
          pattern: checksum*
      - name: Install Dependencies
        run: sudo apt update && sudo apt install unzip build-essential gcc-aarch64-linux-gnu bc flex bison 7zip kmod bash cpio binutils tar git wget dpkg libssl-dev

      - name: Build rootfs
        run: sudo sh veux-rootfs_build.sh

      - name: Upload rootfs.7z
        uses: actions/upload-artifact@v4.0.0
        with:
          # Artifact name
          name: ubuntu_24.04_tty_mainline
          path: rootfs.7z
          compression-level: 0
